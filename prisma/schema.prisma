// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id              Int           @id @default(autoincrement())
  image           String        @db.VarChar(200)
  name            String        @db.VarChar(250)
  email           String       @unique @db.VarChar(200)
  nick_name       String        @unique @db.VarChar(100)
  tel             String        @unique @db.VarChar(14)
  type_permission String        @db.VarChar(18)
  active         Boolean?      @default(true)
  createdAt       DateTime?     @default(now())
  updateAt        DateTime?     @updatedAt
  Event           Event[]
  Participant     Participant[]

  @@map("tb_user")
}

model Event {
  id             Int           @id @default(autoincrement())
  image          String        @db.VarChar(200)
  start_date     String        @db.VarChar(10)
  end_date       String?       @db.VarChar(10)
  start_hour     String        @db.VarChar(5)
  end_hour       String?       @db.VarChar(5)
  title          String        @unique @db.VarChar(150)
  description    String        @db.VarChar(150)
  cep            String?       @db.VarChar(20)
  district       String        @db.VarChar(150)
  type_category  String        @db.VarChar(150)
  active         Boolean?      @default(true)
  createdAt      DateTime?     @default(now())
  updateAt       DateTime?     @updatedAt
  user           User          @relation(fields: [userId], references: [id])
  userId         Int           
  Comment        Comment[]
  Participant    Participant[]
  Like           Like[]

  @@map("tb_event")
}

model Comment {
  id          Int       @id @default(autoincrement())
  description String    @db.VarChar(150)
  active      Boolean?   @default(true)
  createdAt   DateTime? @default(now())
  updateAt    DateTime? @updatedAt
  event       Event?    @relation(fields: [eventId], references: [id])
  eventId     Int

  @@map("tb_comment")
}

model Like {
  id        Int       @id @default(autoincrement())
  active    Boolean?   @default(true)
  createdAt DateTime? @default(now())
  updateAt  DateTime? @updatedAt
  event     Event?    @relation(fields: [eventId], references: [id])
  eventId   Int @unique

  @@map("tb_like")
}

model Participant {
  id        Int       @id @default(autoincrement())
  active    Boolean?   @default(true)
  createdAt DateTime? @default(now())
  updateAt  DateTime? @updatedAt
  user      User?     @relation(fields: [userId], references: [id])
  userId    Int       
  event     Event?    @relation(fields: [eventId], references: [id])
  eventId   Int       @unique

  @@map("tb_participant")
}
